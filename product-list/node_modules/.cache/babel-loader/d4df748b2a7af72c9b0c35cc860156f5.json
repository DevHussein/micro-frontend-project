{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_.._util_root,_.._Observable,_.._Subscriber,_.._operators_map PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\nfunction getXMLHttpRequest() {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    var progId = void 0;\n    try {\n      var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n      for (var i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {}\n      }\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\nexport function ajaxGet(url, headers) {\n  if (headers === void 0) {\n    headers = null;\n  }\n  return new AjaxObservable({\n    method: 'GET',\n    url: url,\n    headers: headers\n  });\n}\nexport function ajaxPost(url, body, headers) {\n  return new AjaxObservable({\n    method: 'POST',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nexport function ajaxDelete(url, headers) {\n  return new AjaxObservable({\n    method: 'DELETE',\n    url: url,\n    headers: headers\n  });\n}\nexport function ajaxPut(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PUT',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nexport function ajaxPatch(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PATCH',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nvar mapResponse = /*@__PURE__*/map(function (x, index) {\n  return x.response;\n});\nexport function ajaxGetJSON(url, headers) {\n  return mapResponse(new AjaxObservable({\n    method: 'GET',\n    url: url,\n    responseType: 'json',\n    headers: headers\n  }));\n}\nvar AjaxObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AjaxObservable, _super);\n  function AjaxObservable(urlOrRequest) {\n    var _this = _super.call(this) || this;\n    var request = {\n      async: true,\n      createXHR: function createXHR() {\n        return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n      },\n      crossDomain: true,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (var prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n    _this.request = request;\n    return _this;\n  }\n  AjaxObservable.prototype._subscribe = function (subscriber) {\n    return new AjaxSubscriber(subscriber, this.request);\n  };\n  AjaxObservable.create = function () {\n    var create = function create(urlOrRequest) {\n      return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n  }();\n  return AjaxObservable;\n}(Observable);\nexport { AjaxObservable };\nvar AjaxSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AjaxSubscriber, _super);\n  function AjaxSubscriber(destination, request) {\n    var _this = _super.call(this, destination) || this;\n    _this.request = request;\n    _this.done = false;\n    var headers = request.headers = request.headers || {};\n    if (!request.crossDomain && !_this.getHeader(headers, 'X-Requested-With')) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n    var contentTypeHeader = _this.getHeader(headers, 'Content-Type');\n    if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n    request.body = _this.serializeBody(request.body, _this.getHeader(request.headers, 'Content-Type'));\n    _this.send();\n    return _this;\n  }\n  AjaxSubscriber.prototype.next = function (e) {\n    this.done = true;\n    var _a = this,\n      xhr = _a.xhr,\n      request = _a.request,\n      destination = _a.destination;\n    var result;\n    try {\n      result = new AjaxResponse(e, xhr, request);\n    } catch (err) {\n      return destination.error(err);\n    }\n    destination.next(result);\n  };\n  AjaxSubscriber.prototype.send = function () {\n    var _a = this,\n      request = _a.request,\n      _b = _a.request,\n      user = _b.user,\n      method = _b.method,\n      url = _b.url,\n      async = _b.async,\n      password = _b.password,\n      headers = _b.headers,\n      body = _b.body;\n    try {\n      var xhr = this.xhr = request.createXHR();\n      this.setupEvents(xhr, request);\n      if (user) {\n        xhr.open(method, url, async, user, password);\n      } else {\n        xhr.open(method, url, async);\n      }\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType;\n      }\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      }\n      this.setHeaders(xhr, headers);\n      if (body) {\n        xhr.send(body);\n      } else {\n        xhr.send();\n      }\n    } catch (err) {\n      this.error(err);\n    }\n  };\n  AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root.FormData && body instanceof root.FormData) {\n      return body;\n    }\n    if (contentType) {\n      var splitIndex = contentType.indexOf(';');\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(function (key) {\n          return encodeURIComponent(key) + \"=\" + encodeURIComponent(body[key]);\n        }).join('&');\n      case 'application/json':\n        return JSON.stringify(body);\n      default:\n        return body;\n    }\n  };\n  AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n    for (var key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  };\n  AjaxSubscriber.prototype.getHeader = function (headers, headerName) {\n    for (var key in headers) {\n      if (key.toLowerCase() === headerName.toLowerCase()) {\n        return headers[key];\n      }\n    }\n    return undefined;\n  };\n  AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n    var progressSubscriber = request.progressSubscriber;\n    function xhrTimeout(e) {\n      var _a = xhrTimeout,\n        subscriber = _a.subscriber,\n        progressSubscriber = _a.progressSubscriber,\n        request = _a.request;\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n      var error;\n      try {\n        error = new AjaxTimeoutError(this, request);\n      } catch (err) {\n        error = err;\n      }\n      subscriber.error(error);\n    }\n    xhr.ontimeout = xhrTimeout;\n    xhrTimeout.request = request;\n    xhrTimeout.subscriber = this;\n    xhrTimeout.progressSubscriber = progressSubscriber;\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        var _xhrProgress_;\n        _xhrProgress_ = function xhrProgress_1(e) {\n          var progressSubscriber = _xhrProgress_.progressSubscriber;\n          progressSubscriber.next(e);\n        };\n        if (root.XDomainRequest) {\n          xhr.onprogress = _xhrProgress_;\n        } else {\n          xhr.upload.onprogress = _xhrProgress_;\n        }\n        _xhrProgress_.progressSubscriber = progressSubscriber;\n      }\n      var _xhrError_;\n      _xhrError_ = function xhrError_1(e) {\n        var _a = _xhrError_,\n          progressSubscriber = _a.progressSubscriber,\n          subscriber = _a.subscriber,\n          request = _a.request;\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n        var error;\n        try {\n          error = new AjaxError('ajax error', this, request);\n        } catch (err) {\n          error = err;\n        }\n        subscriber.error(error);\n      };\n      xhr.onerror = _xhrError_;\n      _xhrError_.request = request;\n      _xhrError_.subscriber = this;\n      _xhrError_.progressSubscriber = progressSubscriber;\n    }\n    function xhrReadyStateChange(e) {\n      return;\n    }\n    xhr.onreadystatechange = xhrReadyStateChange;\n    xhrReadyStateChange.subscriber = this;\n    xhrReadyStateChange.progressSubscriber = progressSubscriber;\n    xhrReadyStateChange.request = request;\n    function xhrLoad(e) {\n      var _a = xhrLoad,\n        subscriber = _a.subscriber,\n        progressSubscriber = _a.progressSubscriber,\n        request = _a.request;\n      if (this.readyState === 4) {\n        var status_1 = this.status === 1223 ? 204 : this.status;\n        var response = this.responseType === 'text' ? this.response || this.responseText : this.response;\n        if (status_1 === 0) {\n          status_1 = response ? 200 : 0;\n        }\n        if (status_1 < 400) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n          var error = void 0;\n          try {\n            error = new AjaxError('ajax error ' + status_1, this, request);\n          } catch (err) {\n            error = err;\n          }\n          subscriber.error(error);\n        }\n      }\n    }\n    xhr.onload = xhrLoad;\n    xhrLoad.subscriber = this;\n    xhrLoad.progressSubscriber = progressSubscriber;\n    xhrLoad.request = request;\n  };\n  AjaxSubscriber.prototype.unsubscribe = function () {\n    var _a = this,\n      done = _a.done,\n      xhr = _a.xhr;\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n    _super.prototype.unsubscribe.call(this);\n  };\n  return AjaxSubscriber;\n}(Subscriber);\nexport { AjaxSubscriber };\nvar AjaxResponse = /*@__PURE__*/function () {\n  function AjaxResponse(originalEvent, xhr, request) {\n    this.originalEvent = originalEvent;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n  return AjaxResponse;\n}();\nexport { AjaxResponse };\nvar AjaxErrorImpl = /*@__PURE__*/function () {\n  function AjaxErrorImpl(message, xhr, request) {\n    Error.call(this);\n    this.message = message;\n    this.name = 'AjaxError';\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n    return this;\n  }\n  AjaxErrorImpl.prototype = /*@__PURE__*/Object.create(Error.prototype);\n  return AjaxErrorImpl;\n}();\nexport var AjaxError = AjaxErrorImpl;\nfunction parseJson(xhr) {\n  if ('response' in xhr) {\n    return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n  } else {\n    return JSON.parse(xhr.responseText || 'null');\n  }\n}\nfunction parseXhrResponse(responseType, xhr) {\n  switch (responseType) {\n    case 'json':\n      return parseJson(xhr);\n    case 'xml':\n      return xhr.responseXML;\n    case 'text':\n    default:\n      return 'response' in xhr ? xhr.response : xhr.responseText;\n  }\n}\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n  AjaxError.call(this, 'ajax timeout', xhr, request);\n  this.name = 'AjaxTimeoutError';\n  return this;\n}\nexport var AjaxTimeoutError = AjaxTimeoutErrorImpl;","map":{"version":3,"sources":["../../../../src/internal/observable/dom/AjaxObservable.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_.._util_root,_.._Observable,_.._Subscriber,_.._operators_map PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers) {\n    if (headers === void 0) {\n        headers = null;\n    }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\nvar mapResponse = /*@__PURE__*/ map(function (x, index) { return x.response; });\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\nvar AjaxObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        var _this = _super.call(this) || this;\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        _this.request = request;\n        return _this;\n    }\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable));\nexport { AjaxObservable };\nvar AjaxSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        var _this = _super.call(this, destination) || this;\n        _this.request = request;\n        _this.done = false;\n        var headers = request.headers = request.headers || {};\n        if (!request.crossDomain && !_this.getHeader(headers, 'X-Requested-With')) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        var contentTypeHeader = _this.getHeader(headers, 'Content-Type');\n        if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        request.body = _this.serializeBody(request.body, _this.getHeader(request.headers, 'Content-Type'));\n        _this.send();\n        return _this;\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var result;\n        try {\n            result = new AjaxResponse(e, xhr, request);\n        }\n        catch (err) {\n            return destination.error(err);\n        }\n        destination.next(result);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        try {\n            var xhr = this.xhr = request.createXHR();\n            this.setupEvents(xhr, request);\n            if (user) {\n                xhr.open(method, url, async, user, password);\n            }\n            else {\n                xhr.open(method, url, async);\n            }\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            this.setHeaders(xhr, headers);\n            if (body) {\n                xhr.send(body);\n            }\n            else {\n                xhr.send();\n            }\n        }\n        catch (err) {\n            this.error(err);\n        }\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(body[key]); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.getHeader = function (headers, headerName) {\n        for (var key in headers) {\n            if (key.toLowerCase() === headerName.toLowerCase()) {\n                return headers[key];\n            }\n        }\n        return undefined;\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            var error;\n            try {\n                error = new AjaxTimeoutError(this, request);\n            }\n            catch (err) {\n                error = err;\n            }\n            subscriber.error(error);\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                var error;\n                try {\n                    error = new AjaxError('ajax error', this, request);\n                }\n                catch (err) {\n                    error = err;\n                }\n                subscriber.error(error);\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            return;\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n        function xhrLoad(e) {\n            var _a = xhrLoad, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (status_1 < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    var error = void 0;\n                    try {\n                        error = new AjaxError('ajax error ' + status_1, this, request);\n                    }\n                    catch (err) {\n                        error = err;\n                    }\n                    subscriber.error(error);\n                }\n            }\n        }\n        xhr.onload = xhrLoad;\n        xhrLoad.subscriber = this;\n        xhrLoad.progressSubscriber = progressSubscriber;\n        xhrLoad.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber));\nexport { AjaxSubscriber };\nvar AjaxResponse = /*@__PURE__*/ (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}());\nexport { AjaxResponse };\nvar AjaxErrorImpl = /*@__PURE__*/ (function () {\n    function AjaxErrorImpl(message, xhr, request) {\n        Error.call(this);\n        this.message = message;\n        this.name = 'AjaxError';\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n        return this;\n    }\n    AjaxErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return AjaxErrorImpl;\n})();\nexport var AjaxError = AjaxErrorImpl;\nfunction parseJson(xhr) {\n    if ('response' in xhr) {\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n    }\n    else {\n        return JSON.parse(xhr.responseText || 'null');\n    }\n}\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            return parseJson(xhr);\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n}\nexport var AjaxTimeoutError = AjaxTimeoutErrorImpl;\n//# sourceMappingURL=AjaxObservable.js.map\n"]},"metadata":{},"sourceType":"module"}
[{"/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/index.tsx":"1","/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/reportWebVitals.ts":"2","/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/App.tsx":"3","/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/Products.tsx":"4","/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/CollectionView.tsx":"5","/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/DetailView.tsx":"6","/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/ItemView.tsx":"7"},{"size":500,"mtime":1689980530466,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1689980530466,"results":"10","hashOfConfig":"9"},{"size":3158,"mtime":1690063973369,"results":"11","hashOfConfig":"9"},{"size":605,"mtime":1689980530466,"results":"12","hashOfConfig":"9"},{"size":852,"mtime":1689980530466,"results":"13","hashOfConfig":"9"},{"size":7672,"mtime":1689980530466,"results":"14","hashOfConfig":"9"},{"size":994,"mtime":1689980530466,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ijsi2d",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/index.tsx",[],["32","33"],"/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/reportWebVitals.ts",[],"/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/App.tsx",[],"/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/Products.tsx",[],"/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/CollectionView.tsx",[],"/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/DetailView.tsx",["34"],"import { AppBar, Button, Dialog, Grid, IconButton, Paper, Slide, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Toolbar } from \"@material-ui/core\";\nimport { TransitionProps } from \"@material-ui/core/transitions/transition\";\nimport { Close } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { IProduct } from \"./Products\";\nimport \"./DetailView.css\";\nimport { microEventBus } from \"./App\";\n\nexport interface IDetailsProps {\n    open: boolean;\n    product: IProduct | null;\n    handleClose(): void;\n    username: string;\n}\n\nexport interface IDetailsState {\n    noSwitches: number;\n}\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport class DetailView extends React.Component<IDetailsProps, IDetailsState> {\n\n    constructor(props: IDetailsProps) {\n        super(props);\n        this.handleClose = this.handleClose.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            noSwitches: 70\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"full-screen-details-dialogue\">\n                <Dialog\n                    fullScreen\n                    open={this.props.open}\n                    TransitionComponent={Transition}>\n                    <AppBar>\n                        <Toolbar>\n                            <IconButton\n                                edge=\"start\"\n                                color=\"inherit\"\n                                onClick={this.handleClose}\n                                aria-label=\"close\">\n                                <Close></Close>\n                            </IconButton>\n                        </Toolbar>\n                    </AppBar>\n                    <div className=\"details-paper-padding-top\">\n                        <Paper className=\"details-paper-body\">\n                            <Grid container spacing={5}>\n                                <Grid item>\n                                    <img className=\"large-image\" src={this.props.product?.image} />\n                                </Grid>\n                                <Grid item xs container direction=\"column\" justify=\"flex-start\" align-items=\"stretch\" >\n                                    <Grid item >\n                                        <h1>{this.props.product?.name}</h1>\n                                    </Grid>\n                                    <Grid item >\n                                        <h2>{this.props.product?.type}</h2>\n                                    </Grid>\n                                    <Grid item >\n                                        <p>{this.props.product?.longDescription}</p>\n                                    </Grid>\n                                    <Grid item >\n                                        <TableContainer component={Paper}>\n                                            <Table aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Specifiations</TableCell>\n                                                        <TableCell align=\"right\">&nbsp;</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    <TableRow >\n                                                        <TableCell >Actuation Force</TableCell>\n                                                        <TableCell >{this.props.product?.specs?.actuationForce} g</TableCell>\n                                                    </TableRow>\n                                                    <TableRow >\n                                                        <TableCell >Actuation Point</TableCell>\n                                                        <TableCell >{this.props.product?.specs?.actuationPoint} mm</TableCell>\n                                                    </TableRow>\n                                                    <TableRow >\n                                                        <TableCell >Bottom Out</TableCell>\n                                                        <TableCell >{this.props.product?.specs?.bottomOut} g</TableCell>\n                                                    </TableRow>\n                                                    <TableRow >\n                                                        <TableCell >Bottom Out Travel</TableCell>\n                                                        <TableCell >{this.props.product?.specs?.bottomOutTravel} mm</TableCell>\n                                                    </TableRow>\n                                                    <TableRow >\n                                                        <TableCell >Price</TableCell>\n                                                        <TableCell >$ {this.props.product?.specs?.price}</TableCell>\n                                                    </TableRow>\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n                                    </Grid>\n                                    <Grid item >\n                                        &nbsp;\n                                    </Grid>\n                                    <Grid item >\n                                        <h3>Order Now :</h3>\n                                    </Grid>\n                                    <form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\n\n                                        <Grid item >\n                                            <TextField type=\"number\" name=\"noSwitches\" id=\"standard-basic\" label=\"No of switches\" onChange={this.onChange} value={this.state.noSwitches} />\n                                        </Grid>\n                                        <Grid item >\n                                            &nbsp;\n                                        </Grid>\n\n                                        <Grid item >\n                                            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                                                Add to Cart\n                                        </Button>\n\n                                        </Grid>\n                                    </form>\n\n                                </Grid>\n\n                            </Grid>\n                        </Paper>\n                    </div>\n                </Dialog>\n            </div>\n        )\n    }\n    handleClose() {\n        console.log(`Details: handleClose()`)\n        this.props.handleClose();\n    }\n\n    onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({ noSwitches: parseInt(event.target.value) });\n        console.log(`onChange : ${event.target.name} : ${event.target.value}`);\n    }\n\n    onSubmit(e: React.FormEvent) {\n        console.log(`submit ; ${this.state.noSwitches}`);\n        e.preventDefault();\n\n        if (this.props.product) {\n            microEventBus.broadcast('add-user-cart-item', {\n                username: this.props.username,\n                productId: this.props.product?.id,\n                amount: this.state.noSwitches\n            });\n        }\n    }\n}\n\n","/Users/hussainalsabr/Desktop/My Files/Self Development/typescript-projects/Mastering-TypeScript-Fourth-Edition/ch16/product-list/src/ItemView.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":61,"column":37,"nodeType":"41","endLine":61,"endColumn":100},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]